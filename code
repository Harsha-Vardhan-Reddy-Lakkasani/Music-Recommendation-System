import numpy as np
import pandas as pd
import difflib
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity

songs= pd.read_csv('songsdata.csv')
songs_data = songs.iloc[0:10000]
combining_features = songs_data['artist']+songs_data['song']+songs_data['text']
vectorizer = TfidfVectorizer()
feature_vectors = vectorizer.fit_transform(combining_features)
similarity = cosine_similarity(feature_vectors)
song_name = input(" Enter Your Favourite Song Name")
list_of_all_songs = songs_data['song'].tolist()
find_close_match = difflib.get_close_matches(song_name,list_of_all_songs)
close_match = find_close_match[0]
index_of_song = songs_data[songs_data.song == close_match]['index'].values[0]
similarity_score = list(enumerate(similarity[index_of_song]))
sorted_similarity_songs = sorted(similarity_score,key = lambda x:x[1], reverse = True)
print("Songs Recommendation for you \n")
i = 1
for songss in sorted_similarity_songs:
    index = songss[0]
    song_from_index = songs_data[songs_data.index == index]['song'].values[0]
    if(i<=30):
        print(i,'.',song_from_index)
        i+=1
